type ProductCategory {
    id: ID! @id
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt

    name: String! @unique
    products: [Product!]! @relation(name: "ProductCategories", onDelete: SET_NULL)
}

type Product {
    id: ID! @id
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt

    name: String!
    description: String!
    content: String
    unitPrice: Float!
    category: ProductCategory! @relation(name: "ProductCategories", link: INLINE, onDelete: SET_NULL)
    imageURLs: [String!]! @scalarList(strategy: RELATION)
    discounts: [Discount!]! @relation(name: "ProductDiscounts", onDelete: CASCADE)
    orders: [Item!]! @relation(name: "ProductsInOrder")
}

type Discount {
    id: ID! @id
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt

    product: Product! @relation(name: "ProductDiscounts", onDelete: SET_NULL)
    name: String!
    description: String!

    code: String
    unitPrice: Float!
    discountRequests: [DiscountRequest!]! @relation(name: "DiscountRequests", onDelete: CASCADE)

    requirements: String!
}


type DiscountRequest {
    id: ID! @id
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt

    discount: Discount! @relation(name: "DiscountRequests", link: INLINE, onDelete: SET_NULL)
    user: User! @relation(name: "UserDiscountRequests", link: INLINE, onDelete: SET_NULL)
    applied: Boolean! @default(value: false)
    approved: Boolean! @default(value: false)
    documentation: [String!]! @scalarList(strategy: RELATION)
}

enum TxType {
    SALE
    PURCHASE
    RECEIPT
    PAYMENT
} 

type Transaction {
    id: ID! @id
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt

    type: TxType! @default(value: SALE)
    reference: String # in the case of TPV transactions this field is Ds_AuthorisationCode
    order: Order @relation(name: "OrderTransactions", link: INLINE, onDelete: SET_NULL)
    amount: Float!
}

type Order{
    id: ID! @id
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt

    customer: User! @relation(name: "CustomerOrders", link: INLINE)
    items: [Item!]! @relation(name: "OrderItems", onDelete: CASCADE)
    reference: String! @unique
    metadata: Json

    paymentSettled: Boolean! @default(value: false)
    paymentDue: DateTime
    transactions: [Transaction!]! @relation(name: "OrderTransactions", onDelete: CASCADE)

    vatRate: Int @default(value: 0)
    total: Float!
}

type Item {
    id: ID! @id
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt

    order: Order! @relation(name: "OrderItems", link: INLINE, onDelete: SET_NULL)
    product: Product! @relation(name: "ProductsInOrder" link: INLINE, onDelete: SET_NULL)
    discount: Discount
    quantity: Int!
    orderPrice: Float! # this price either from a product or a discount
}
