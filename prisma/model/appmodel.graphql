type News {
  id: ID! @unique
  author: User! @relation(name: "NewsToUser", onDelete: SET_NULL)
  title: String!
  subtitle: String
  body: String!
  imageURL: String
  expiration: DateTime
  category: String
  featured: Boolean @default(value: "false")
  target: UserGroup!
  deleteUpon: Boolean @default(value: "false")
  published: Boolean! @default(value: "false")
  createdAt: DateTime!
  updatedAt: DateTime!
}
type Event {
  id: ID! @unique
  author: User! @relation(name: "EventToUser", onDelete: SET_NULL)
  title: String!
  subtitle: String
  organizer: String
  body: String!
  imageURL: String
  date: DateTime!
  access: String
  accessPoint: String
  target: UserGroup!
  deleteUpon: Boolean @default(value: "false")
  published: Boolean! @default(value: "false")
  venue: Venue! @relation(name: "EventToVenue", onDelete: SET_NULL)
  createdAt: DateTime!
  updatedAt: DateTime!
}
type Venue {
  id: ID! @unique
  name: String!
  address: String!
  placeID: String
  latitude: Float
  longitude: Float
  events: [Event!]! @relation(name: "EventToVenue", onDelete: CASCADE )
}
