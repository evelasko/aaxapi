# import UserOrderByInput from '../generated/prisma.graphql'

type Query {
    users(query: String, first: Int, skip: Int): [User!]!
    newses(query: String): [News]!
    me: User!
}
type Mutation {
    createUser(data: CreateUserInput!): AuthPayload!
    loginUser(data: LoginUserInput!): AuthPayload!
    deleteUser: User!
    updateUser(data: UpdateUserInput! ): User!
}
#type Subscription {

#}
type AuthPayload {
    token: String!
    user: User!
}
input LoginUserInput {
    email: String!
    password: String!
}
input CreateUserInput {
    name: String!
    email: String!
    password: String!
}
input UpdateUserInput {
    name: String
    email: String
    password: String
}
type User {
    id: ID!
    name: String!
    email: String
    password: String!
}

type News {
  id: ID!
  title: String!
  subtitle: String
  body: String!
  imageURL: String
  expiration: DateTime!
  target: UserGroup!
  published: Boolean!
}

enum MutationType {
    CREATED
    UPDATED
    DELETED
}
